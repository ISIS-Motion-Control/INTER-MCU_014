<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="Rotation" Id="{83b74736-0e2a-4820-b07c-7378d567dc02}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM Rotation
VAR
//Outputs: Power for Limit switches, Home Sensors, etc.
    //bPowerSwitchesAxis1 AT %Q*: BOOL:= TRUE;
    bFwdLimitPower AT %Q* : BOOL := TRUE;
    bBwdLimitPower AT %Q* : BOOL := TRUE;
    bEnable : BOOL := TRUE;
    
    OpState : E_RotationBrakeCheckerState := E_RotationBrakeCheckerState.Brake_Test_Not_Valid;
    bBrakeTestInProgress : BOOL;
//Hardware interlocks
    //bInterlockFwdOK AT %I*: BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[//Initial parameters of an Axis
(*IF _TaskInfo[fbGetCurTaskIndex.index].FirstCycle THEN
    //Initial default values:
    GVL.astAxes[1].stConfig.eHomeSeq := 0;
    GVL.astAxes[1].stConfig.fHomePosition := 0.0;
    GVL.astAxes[1].stConfig.fHomeFinishDistance := 0.0;
    GVL.astAxes[1].stConfig.eRestorePosition := E_RestorePosition.eRestoreWithoutHome;
END_IF*)
astAxes[AXIS_ROTATION].stControl.bEnable := bEnable;
astAxes[AXIS_ROTATION].stDescription.sAxisName := 'ROTATION';


IF NOT GVL_INTER.BRAKE_TEST_PASSED AND NOT bBrakeTestInProgress THEN
    OpState:= E_RotationBrakeCheckerState.Brake_Test_Not_Valid;
END_IF

CASE OpState OF
    E_RotationBrakeCheckerState.Brake_Test_Not_Valid:
           //Ensure motor cannot be enabled
           astAxes[AXIS_ROTATION].stControl.bEnable := FALSE;      

END_CASE


]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>