<div id="Desktop" data-tchmi-type="TcHmi.Controls.System.TcHmiView" data-tchmi-top="0" data-tchmi-left="0" data-tchmi-width-mode="Content" data-tchmi-min-width="100" data-tchmi-min-width-unit="%" data-tchmi-height-mode="Content" data-tchmi-min-height="100" data-tchmi-min-height-unit="%" data-tchmi-zindex="1" data-tchmi-height-unit="%" data-tchmi-height="100" data-tchmi-width-unit="%" data-tchmi-width="100" data-tchmi-creator-viewport-width="1280" data-tchmi-creator-viewport-height="800">
<div id="TcHmiRegion" data-tchmi-type="TcHmi.Controls.System.TcHmiRegion" data-tchmi-height="85" data-tchmi-height-unit="%" data-tchmi-left="1" data-tchmi-left-unit="%" data-tchmi-top="1" data-tchmi-top-unit="%" data-tchmi-width="95" data-tchmi-width-unit="%" data-tchmi-target-content="UserContent/Content_Statuses.content" data-tchmi-zindex="0" data-tchmi-width-mode="Value" data-tchmi-height-mode="Value">
</div>

<script data-tchmi-target-attribute="data-tchmi-background-color" type="application/json">
{
  "angle": 0.0,
  "stopPoints": [
    {
      "color": "rgba(121, 160, 205, 0.7058823)",
      "stop": "0%"
    },
    {
      "color": "rgba(115, 186, 208, 0.7058823)",
      "stop": "80.24%"
    }
  ]
}
</script>
<div id="BottomMenuBarContainer" data-tchmi-type="TcHmi.Controls.System.TcHmiContainer" data-tchmi-height="80" data-tchmi-height-unit="px" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="%" data-tchmi-bottom="0">
<div id="BackgroundGraphic" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiRectangle" data-tchmi-height="80" data-tchmi-height-unit="px" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="%" data-tchmi-bottom="0" data-tchmi-right="0">
<script data-tchmi-target-attribute="data-tchmi-fill-color" type="application/json">
{
  "angle": 0.0,
  "stopPoints": [
    {
      "color": "rgba(166, 160, 160, 1)",
      "stop": "0%"
    },
    {
      "color": "rgba(214, 209, 209, 1)",
      "stop": "100%"
    }
  ]
}
</script>



<script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
{
  "color": "None"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-stroke-color" type="application/json">
{
  "color": "rgba(183, 183, 183, 1)"
}
</script>
</div>
<div id="Button_StatusPage" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="60" data-tchmi-height-unit="px" data-tchmi-left-unit="px" data-tchmi-text="KINEMATICS" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-zindex="1" data-tchmi-text-font-size="16" data-tchmi-bottom="10" data-tchmi-left="10">
<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "Button_StatusPage.onPressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%TcHmiRegion::TargetContent%/ctrl%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:framework#/definitions/ContentPath",
          "value": "UserContent/Content_Statuses.content"
        },
        "asyncWait": true
      }
    ]
  }
]
</script>





<script data-tchmi-target-attribute="data-tchmi-box-shadow" type="application/json">
[
  {
    "offsetX": 0.0,
    "offsetXUnit": "px",
    "offsetY": 0.0,
    "offsetYUnit": "px",
    "inset": false,
    "blur": 0.0,
    "blurUnit": "px",
    "spread": 0.0,
    "spreadUnit": "px"
  }
]
</script>








</div>
<div id="Button_AxesPage" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="60" data-tchmi-height-unit="px" data-tchmi-left="120" data-tchmi-left-unit="px" data-tchmi-text="AXES" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-zindex="1" data-tchmi-text-font-size="16" data-tchmi-bottom="10">
<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "Button_AxesPage.onPressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%TcHmiRegion::TargetContent%/ctrl%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:framework#/definitions/ContentPath",
          "value": "UserContent/Content_Axes.content"
        },
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="Button_ShowHideKeyboard" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="22" data-tchmi-height-unit="px" data-tchmi-left="489" data-tchmi-left-unit="px" data-tchmi-text="KEYBOARD" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-zindex="1" data-tchmi-text-font-size="16" data-tchmi-bottom="10">
<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "Button_ShowHideKeyboard.onPressed",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%s%Keyboard%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Visibility",
                  "value": "Visible"
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%s%Keyboard%/s%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Visibility",
                  "value": "Hidden"
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%s%Keyboard%/s%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Visibility",
                  "value": "Visible"
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmi_Controls_Beckhoff_TcHmiImage" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiImage" data-tchmi-height="64" data-tchmi-height-unit="px" data-tchmi-left-unit="px" data-tchmi-src="Images/ISISUKRI_LOGO.png" data-tchmi-top-unit="px" data-tchmi-width="125" data-tchmi-width-unit="px" data-tchmi-right="10" data-tchmi-bottom="10" data-tchmi-zindex="1">
</div>
<div id="TcHmiKeyboard" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiKeyboard" data-tchmi-height="250" data-tchmi-height-unit="px" data-tchmi-label-font-size="14" data-tchmi-layout-file="KeyboardLayouts/Numpad (plusminus).keyboard.json" data-tchmi-left-unit="px" data-tchmi-scale-mode="ScaleToFit" data-tchmi-top-unit="px" data-tchmi-width="247" data-tchmi-width-unit="px" data-tchmi-zindex="2" data-tchmi-visibility="%s%Keyboard%/s%" data-tchmi-right="100" data-tchmi-bottom="85">
<script data-tchmi-target-attribute="data-tchmi-indirect-input-padding" type="application/json">
{
  "top": 3,
  "right": 3,
  "bottom": 3,
  "left": 3
}
</script>
<script data-tchmi-target-attribute="data-tchmi-keyboard-padding" type="application/json">
{
  "top": 10,
  "topUnit": "px",
  "right": 10,
  "rightUnit": "px",
  "bottom": 10,
  "bottomUnit": "px",
  "left": 10,
  "leftUnit": "px"
}
</script>
<script data-tchmi-target-attribute="data-tchmi-key-padding" type="application/json">
{
  "top": 4,
  "topUnit": "px",
  "right": 4,
  "rightUnit": "px",
  "bottom": 4,
  "bottomUnit": "px",
  "left": 4,
  "leftUnit": "px"
}
</script>
<script data-tchmi-target-attribute="data-tchmi-additional-key-backdrop-padding" type="application/json">
{
  "top": 10,
  "topUnit": "px",
  "right": 10,
  "rightUnit": "px",
  "bottom": 10,
  "bottomUnit": "px",
  "left": 10,
  "leftUnit": "px"
}
</script>

</div>
<div id="Button_AxesPage_2" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="60" data-tchmi-height-unit="px" data-tchmi-left="230" data-tchmi-left-unit="px" data-tchmi-text="MOTION SAFETY" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-zindex="1" data-tchmi-text-font-size="16" data-tchmi-bottom="10">
<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "Button_AxesPage_2.onPressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%TcHmiRegion::TargetContent%/ctrl%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:framework#/definitions/ContentPath",
          "value": "UserContent/Content_Safety.content"
        },
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
</div>
</div>